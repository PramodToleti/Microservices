---
openapi: 3.1.0
info:
  title: Users API
  description: API for managing users
  version: 1.0.0
servers:
  - url: http://localhost:5000

paths:
  "/getUsers":
    get:
      tags:
        - users
      description: Get All Users
      operationId: getUsers
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"

  "/getUser/{email}":
    get:
      tags:
        - users
      description: Get User by Id
      operationId: getUserById
      parameters:
        - name: email
          in: path
          description: email of the user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"

  /addUser:
    post:
      tags:
        - users
      description: Add User
      operationId: addUser
      requestBody:
        description: User Object to be added
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"

  "/updateUser/{email}":
    put:
      tags:
        - users
      description: Update User
      operationId: updateUser
      parameters:
        - name: email
          in: path
          description: User Email
          required: true
          schema:
            type: string
      requestBody:
        description: User object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"

  "/deleteUser/{email}":
    delete:
      tags:
        - users
      description: Delete User
      operationId: deleteUser
      parameters:
        - name: email
          in: path
          description: User Email
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"

components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        age:
          type: integer

    ApiResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
